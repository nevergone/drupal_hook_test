<?php

/**
 * @file
 * Egyszerű oldalt megvalósító modul.
 * Bekér néhány szöveget és azt megjeleníti egy adott oldalon.
 */


/**
 * Implements hook_menu().
 *
 * hook_menu() implementáció
 */
function simplepage_menu() {
  // Két oldal: beállításhoz és megjelenítéshez
  $items = array();
  $items['admin/config/simplepage'] = array(
    'title' => 'Simple page settings',
    'access arguments' => array('simplepage_administer'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simplepage_settings_form'),
  );
  $items['simplepage'] = array(
    'title' => 'Simple page',
    'access arguments' => array('simplepage_view'),
    'page callback' => 'simplepage_page',
  );
  return $items;
}

/**
 * Implements hook_permission().
 *
 * hook_permission() implementáció
 */
function simplepage_permission() {
  // Készítünk két jogosultságot: az oldal beállításához és megtekintéséhez
  $return = array();
  $return['simplepage_administer'] = array(
    'title' => t('Administer Simple page'),
  );
  $return['simplepage_view'] = array(
    'title' => t('Simple page view'),
  );
  return $return;
}

/**
 * Implements hook_theme().
 *
 * hook_theme() implementáció
 */
function simplepage_theme() {
  // Készítűnk sminkfüggvényt, "theme_simplepage()" lesz a neve.
  $return = array();
  // Preprocess függvényekhez használt kulcs.
  $return['simplepage'] = array(
    // sablonfájl: simplepage.tpl.php
    'template' => 'simplepage',
    'variables' => array(
      // A sminkfüggvény a $variables['simplepage_text_*'] alatt találja meg
      // a megjelenítendő szövegeket.
      'simplepage_text_preprocess' => NULL,
      'simplepage_text_hook' => NULL,
    ),
  );
  return $return;
}

/**
 * Simplepage beállító form.
 */
function simplepage_settings_form($form, &$form_state) {
  $form['simplepage_text_preprocess'] = array(
    '#type' => 'textfield',
    // A t() függvény használatával fordíthatóvá válik a megadott szöveg.
    '#title' => t('theme preprocess'),
    '#default_value' => variable_get('simplepage_text_preprocess'),
  );
  $form['simplepage_text_hook'] = array(
    '#type' => 'textfield',
    // A t() függvény használatával fordíthatóvá válik a megadott szöveg.
    '#title' => t('module_invoke_all()'),
    '#default_value' => variable_get('simplepage_text_hook'),
  );
  return system_settings_form($form);
}

/**
 * A megadott szövegek megjelenítése.
 */
function simplepage_page() {
  // "theme preprocess"
  $simplepage_text_preprocess = variable_get('simplepage_text_preprocess');
  // "module_invoke_all()"
  // Meghívunk minden "hook_simplepage_teszt()" függvény-implementációt.
  $simplepage_text_hook = variable_get('simplepage_text_hook');
  $hook_return = module_invoke_all('simplepage_teszt', $simplepage_text_hook);
  drupal_set_message('hook_simplepage_teszt() implementációk által visszaadott értékek:');
  foreach ($hook_return as $item) {
    $item = check_plain($item);
    drupal_set_message($item);
  }
  // Kimenet összeállítása
  $output = array(
    '#type' => 'markup',
    // hook_theme() megfelelő kulcsa.
    '#theme' => 'simplepage',
    // A felhasználó által megadott értékek módosítás nélkül.
    '#simplepage_text_preprocess' => check_plain($simplepage_text_preprocess),
    '#simplepage_text_hook' => check_plain($simplepage_text_hook),
  );
  return $output;
}

/**
 * MODULNEVE_preprocess_KULCS (lásd: hook_theme()).
 *
 * Preprocess függvény a kimenet módosításához.
 * Ez a függvény belülbírálható a sminkben.
 */
function simplepage_preprocess_simplepage(&$variables) {
  if ($variables['simplepage_text_preprocess']) {
    // Akármi a kiirandó szöveg, módosítjuk
    $variables['simplepage_text_preprocess'] .= ' preprocess';
  }
}
